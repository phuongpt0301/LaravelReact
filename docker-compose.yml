version: '3.7'
services: 
    #Nginx Service
    nginx:
        container_name: nginx
        image: nginx:1.17
        ports:
            - "127.0.0.1:80:80"
        volumes:
            - ./:/var/www/app
            - ./docker/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app-network
        restart: unless-stopped
        tty: true
        environment:
            DEBUG: 'true'

    #PHP Service
    app:
        container_name: app
        build: ./
        env_file: .env
        environment:
            APP_ENV: 'development'
            APP_DEBUG: 'true'
            LOG_CHANNEL: 'stderr'
            DB_CONNECTION: '${DB_CONNECTION}'
            DB_HOST: '${DB_HOST}'
            DB_PORT: '${DB_PORT}'
            DB_DATABASE: '${DB_DATABASE}'
            DB_USERNAME: '${DB_USERNAME}'
            DB_PASSWORD: '${DB_PASSWORD}'
        working_dir: /var/www/app
        volumes: 
            - ./:/var/www/app
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        expose:
            - 9000
        depends_on:
            - db
        networks:
            - app-network
        restart: unless-stopped
        tty: true

    #Database Service
    db:
        image: postgres:12.1
        container_name: db
        env_file: .env
        environment:
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
        volumes:
            - ./docker/db/data:/var/lib/postgresql/data
            - ./docker/db/sql:/docker-entrypoint-initdb.d
        ports:
            - 5432:5432
        networks:
            - app-network
        restart: unless-stopped
        tty: true
    
#Docker Networks
networks:
    app-network:
        driver: bridge
            